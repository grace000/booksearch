{"ast":null,"code":"import axios from \"axios\";\n\nvar runQuery = function runQuery(term) {\n  var formattedTerm = term.trim();\n  var url = \"https://www.googleapis.com/books/v1/volumes?q=\".concat(formattedTerm, \"&maxResults=39\");\n  return axios.get(url).then(function (results) {\n    return results.data;\n  }).catch(function (error) {\n    // Error\n    if (error.response) {// The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      // console.log(error.response.data);\n      // console.log(error.response.status);\n      // console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n\n    console.log(error.config);\n  });\n};\n\nexport { runQuery };","map":{"version":3,"sources":["/Users/tiffanielmore/Desktop/Coding Resources/googlebooks/booksearch/client/src/components/utility/helpers.js"],"names":["axios","runQuery","term","formattedTerm","trim","url","get","then","results","data","catch","error","response","request","console","log","message","config"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI,EAAI;AACvB,MAAIC,aAAa,GAAGD,IAAI,CAACE,IAAL,EAApB;AAEA,MAAMC,GAAG,2DAAoDF,aAApD,mBAAT;AAGA,SAAOH,KAAK,CAACM,GAAN,CAAUD,GAAV,EACJE,IADI,CACC,UAAAC,OAAO;AAAA,WAAIA,OAAO,CAACC,IAAZ;AAAA,GADR,EAC0BC,KAD1B,CACgC,UAACC,KAAD,EAAW;AAC9C;AACA,QAAIA,KAAK,CAACC,QAAV,EAAoB,CAChB;AACA;AACA;AACA;AACA;AACH,KAND,MAMO,IAAID,KAAK,CAACE,OAAV,EAAmB;AACtB;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACE,OAAlB;AACH,KALM,MAKA;AACH;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAAK,CAACK,OAA3B;AACH;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACM,MAAlB;AACD,GAnBI,CAAP;AAoBD,CA1BD;;AA4BA,SAAQhB,QAAR","sourcesContent":["import axios from \"axios\"\n\n\nconst runQuery = term => {\n  let formattedTerm = term.trim()\n\n  const url = `https://www.googleapis.com/books/v1/volumes?q=${formattedTerm}&maxResults=39`\n\n  \n  return axios.get(url)\n    .then(results => results.data).catch((error) => {\n      // Error\n      if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          // console.log(error.response.data);\n          // console.log(error.response.status);\n          // console.log(error.response.headers);\n      } else if (error.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error.request);\n      } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', error.message);\n      }\n      console.log(error.config);\n    })\n}\n\nexport {runQuery};"]},"metadata":{},"sourceType":"module"}