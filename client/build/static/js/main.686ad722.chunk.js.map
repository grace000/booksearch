{"version":3,"sources":["components/Query/index.js","components/Book/components/Author/index.js","components/Book/components/Title/index.js","components/Book/components/BookImage/index.js","components/Book/components/Description/index.js","components/Book/components/Publisher/index.js","components/Book/index.js","services/utility/helpers.js","scenes/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["Query","props","react_default","a","createElement","className","onSubmit","getBooks","type","name","placeholder","required","Author","_ref","result","authors","map","author","key","href","concat","target","Title","infoLink","title","BookImage","imageLinks","src","smallThumbnail","alt","Description","description","slice","Publisher","publisher","Book","Object","esm_extends","components_Title","components_Author","components_Description","components_Publisher","components_BookImage","runQuery","term","formattedTerm","trim","url","axios","get","then","results","data","Home","state","errorStatus","undefined","e","preventDefault","elements","search","value","reset","_this","setState","totalItems","bookList","items","_this$state","this","components_Query","length","components_Book","id","volumeInfo","Component","App","scenes_Home","Boolean","window","location","hostname","match","require","config","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.686ad722.chunk.js","sourcesContent":["import React from 'react'\nimport './styles.css'\n\nconst Query = props => (\n    <div className=\"query-wrapper\">\n        <h1 className=\"query-title\">BookSearch</h1>\n        <form className=\"query-form\" onSubmit={props.getBooks}>\n            <input \n                className=\"query-input\"\n                type =\"text\" \n                name=\"search\" \n                placeholder=\"title, author, and/or keyword\"\n                required\n                />\n            <button className=\"query-btn\" type=\"submit\">Search</button>\n        </form>\n    </div>\n);\n        \nexport default Query;\n","import React from 'react'\n\nconst Author = ({ result} ) => (\n    <div>\n       {\n            result.authors && \n            <ul className=\"author\">{result.authors.map(author =>\n            <li key={author}>\n                <a href={`https://google.com/search?q=+${author}`} target=\"none\">{author}</a>\n            </li>)}\n            </ul>\n        }\n    </div>\n)\n\nexport default Author;","import React from 'react'\n\nconst Title = ({ result }) => (\n    <div>\n        {\n            result.infoLink && result.title &&\n            <h3>\n            <a className=\"title\" href={result.infoLink} target=\"none\">\n                {result.title}\n            </a>\n            </h3>\n        }\n    </div>\n)\n\nexport default Title;","import React from 'react'\n\nconst BookImage = ({ result }) => (\n    <div className=\"result-image\">\n    {\n      result.imageLinks && \n      (\n        <img src={result.imageLinks.smallThumbnail} alt=\"\" />\n      )\n    }\n  </div>\n)\n\nexport default BookImage;","import React from 'react'\n\nconst Description = ({ result }) => (\n    <div>\n        {\n            result.description &&\n            <p className=\"search-snippet\">{result.description.slice(0,150)}...</p>\n        }\n    </div>\n)\n\nexport default Description;\n","import React from 'react'\n\nconst Publisher = ({ result }) => (\n   <div>\n        {\n            result.publisher && \n            <p className=\"publisher\">{result.publisher}</p>\n        }\n   </div>\n)\n\nexport default Publisher;","import React from 'react'\nimport './styles.css'\nimport Author from './components/Author'\nimport Title from './components/Title'\nimport BookImage from './components/BookImage'\nimport Description from './components/Description/index'\nimport Publisher from './components/Publisher/index'\n\nconst Book = ({...props}) => (\n  <div className=\"result-wrapper\">\n    <div className=\"result-box\">\n      <div className=\"result-text\">\n        <Title {...props} />\n        <Author {...props} />\n        <Description {...props} />\n        <Publisher {...props} />\n      </div>\n      <BookImage {...props} />\n    </div>\n  </div>\n)\n\nexport default Book;\n","import axios from \"axios\"\n\nconst runQuery = term => {\n  let formattedTerm = term.trim()\n\n  const url = `https://www.googleapis.com/books/v1/volumes?q=${formattedTerm}&maxResults=39`\n\n  return axios.get(url).then(results => results.data)\n}\n\nexport {runQuery};","import React, { Component } from 'react';\nimport './styles.css';\nimport Query from '../../components/Query';\nimport Book from '../../components/Book';\nimport { runQuery } from '../../services/utility/helpers';\n\nclass Home extends Component {\n  state = {\n    results:[],\n    errorStatus: undefined\n  }\n\n  getBooks = (e) => {\n    e.preventDefault();\n    const term = e.target.elements.search.value;\n    e.target.reset();\n\n    runQuery(term)\n      .then(data => {\n        this.setState({results:[]})\n\n        if (data.totalItems === 0){\n          this.setState({\n            results:null,\n            errorStatus: `Sorry, no results from search: ${term} ðŸ¤”`\n          })\n        } else {\n          const bookList = data.items;\n          this.setState({results:bookList})\n        }\n        \n      })\n  }\n  render() {\n    const { results, errorStatus } = this.state;\n    return (\n      <div className=\"Home\">\n        <div className=\"query-container\">\n          <Query getBooks={this.getBooks} />\n        </div>\n        <div className=\"books-container\">\n          <p>{errorStatus}</p>\n          {results && results.length === 0 && <p>Start your book search!</p>}\n          {results && results.map(result => <Book \n            key={result.id}\n            result={result.volumeInfo}\n          />)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react'\nimport './App.css'\nimport Home from \"./scenes/Home\"\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Home />\n      </div>\n    )\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}